{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleRestart","window","location","reload","state","progress","flags","bombs","lose","handleClick","bind","assertThisInitialized","event","clicked","target","classList","contains","that","setTimeout","i","current","document","getElementById","parentElement","removeChild","setState","Math","round","remove","add","append","value","hits","_loop","neighbors","filter","forEach","cell","neighbor","_loop2","count","addEventListener","ev","preventDefault","element","_this2","react_default","a","createElement","className","arr","random","push","key","onClick","id","startGame","Component","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5466dd69.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: 0,\n      flags: 0,\n      bombs: 0,\n      lose: false\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    let clicked = event.target;\n\n    if (clicked.classList.contains('bomb')) {\n\n      const that = this;\n\n      setTimeout(function(){ \n        let progress = 0;\n        let flags = 0;\n        let bombs = 0;\n        for (let i = 1; i < 1601; i++) {\n          let current = document.getElementById(i);\n          if (current.classList.contains('clicked')) {\n            progress++;\n          }\n          if (current.classList.contains('bomb')) {\n            bombs++;\n          }\n          if (current.classList.contains('flag') && current.classList.contains(\"bomb\")) {\n            flags++;\n          }\n          current.parentElement.removeChild(current);\n        }\n\n        that.setState({\n          progress: Math.round((progress/1600) * 100),\n          flags: flags,\n          bombs: bombs,\n          lose: true\n        });\n\n        return;\n\n      }, 1000);\n\n    }\n\n    if (clicked.classList.contains('unclicked')) {\n      clicked.classList.remove(\"unclicked\"); \n      clicked.classList.add(\"clicked\");\n      clicked.append(clicked.value);\n\n      let hits = 1;\n\n      while (hits >= 1) {\n      \n        hits = 0;\n\n      for (let i = 1; i < 1601; i++) {\n\n        let current = document.getElementById(i);\n\n        if (!current.classList.contains(\"bomb\")) {\n\n          let neighbors = [\n            i - 40,\n            i + 1,\n            i - 1,\n            i + 40];\n\n          if (i <= 40) {\n            neighbors = neighbors.filter(function(value) {\n              if (value !== i - 40) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n          }\n\n          if (i >= 1561) {\n            neighbors = neighbors.filter(function(value) {\n              if (value !== i + 40) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n          }\n\n          if (i === 1) {\n            neighbors = neighbors.filter(function(value) {\n              if (value !== i - 1) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n          }\n\n          if ((i - 1) % 40 === 0) {\n            neighbors = neighbors.filter(function(value) {\n              if (value !== i - 1) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n          }\n\n          if (i % 40 === 0) {\n            neighbors = neighbors.filter(function(value) {\n              if (value !== i + 1) {\n                return true;\n              } else {\n                return false;\n              }\n            })\n          }\n\n\n          neighbors.forEach(function(cell) {\n\n            let neighbor = document.getElementById(cell);\n            if (neighbor.classList.contains('clicked') && current.classList.contains('unclicked') && neighbor.value == \"\") {\n              current.classList.add(\"clicked\");\n              current.classList.remove(\"unclicked\");\n              current.append(current.value);\n              hits++;\n            } \n          })\n\n\n        }\n\n      }\n\n    }\n\n    }\n  }\n\n\n  componentDidMount() {\n\n    for (let i = 1; i < 1601; i++) {\n      let count = 0;\n      let current = document.getElementById(i);\n      current.addEventListener('contextmenu', function(ev) {\n        ev.preventDefault();\n        if (current.classList.contains(\"flag\")) {\n          current.classList.remove(\"flag\");\n        } else {\n          current.classList.add(\"flag\");\n        };\n        return false;\n    }, false);\n      let neighbors = [\n        i - 40,\n        i - (39),\n        i - (41),\n        i + 1,\n        i - 1,\n        i + 40,\n        i + 39,\n        i + 41];\n\n      if (i <= 40) {\n        neighbors = neighbors.filter(function(value) {\n          if (value !== i - 40 && value !== i - 39 && value !== i - 41) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      }\n\n      if (i >= 1561) {\n        neighbors = neighbors.filter(function(value) {\n          if (value !== i + 40 && value !== i + 39 && value !== i + 41) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      }\n\n      if (i === 1) {\n        neighbors = neighbors.filter(function(value) {\n          if (value !== i - 1) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      }\n\n      if ((i - 1) % 40 === 0) {\n        neighbors = neighbors.filter(function(value) {\n          if (value !== i - 1 && value !== i - 41 && value !== i + 39) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      }\n\n      if (i % 40 === 0) {\n        neighbors = neighbors.filter(function(value) {\n          if (value !== i + 1 && value !== i - 39 && value !== i + 41) {\n            return true;\n          } else {\n            return false;\n          }\n        })\n      }\n\n      neighbors.forEach(function(element) {\n        if (document.getElementById(element).classList.contains(\"bomb\")) {\n          count++;\n        };\n            \n      })\n      \n      current.value = count;\n\n      if (current.classList.contains('bomb')) {\n        current.value = \"\";\n      }\n\n      switch(count) {\n        case 0:\n          current.value = \"\";\n          break;\n        case 1:\n          current.classList.add('blue');\n          break;\n        case 2:\n          current.classList.add('green');\n          break;\n        case 3:\n          current.classList.add('red');\n          break;\n        default:\n          break;\n      }\n    }\n\n  }\n\n  \n  handleRestart = () => {\n    window.location.reload();\n  }\n\n  render() {\n\n    const startGame = () => {\n\n      let arr = [];\n      for (let i = 1; i < 1601; i++) {\n        let roll = Math.random();\n        if (roll > 0.90) {\n        arr.push(<div className={\"unclicked bomb cell\"} key={i} onClick={this.handleClick} id={i}></div>);\n        } else {\n          arr.push(<div className={\"unclicked cell\"} key={i} onClick={this.handleClick} id={i}></div>);\n        } \n      }\n      return arr;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"boundary\">\n          {startGame()}\n        </div>\n        {this.state.lose && <div id=\"lose\">\n          <h1>You hit a bomb! You completed {this.state.progress}% of the game and successfully flagged {this.state.flags} out of {this.state.bombs} bombs.</h1>\n          <button onClick={this.handleRestart}>Play Again?</button>\n        </div>}\n        <h4>Left click squares without bombs and right click to flag squares with bombs. The numbers indicate the number of bombs in the adjacent 8 squares.</h4>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}